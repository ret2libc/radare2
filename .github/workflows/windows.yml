name: Windows

on:
  push:
    branches:
    - '*windows*'

jobs:
  build:
    name: windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        name: [vs2019_static, clang_cl]
        include:
          - name: vs2019_static
            compiler: cl
            meson_options: --default-library=static -Dstatic_runtime=true
          - name: clang_cl
            compiler: clang-cl
            meson_options: --default-library=shared
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install meson ninja
    - name: Build with meson + ninja
      shell: pwsh
      run: |
        .github\vsdevenv.ps1
        meson --prefix=$PWD\radare2-install build ${{ matrix.meson_options }}
        ninja -C build
        ninja -C build install
    - uses: actions/checkout@v2
      with:
        repository: 'redareorg/radare2-win-installer'
    - name: Create installer
      shell: pwsh
      run: |
        $env:R2_VERSION = ( python sys\\version.py )
        iscc radare2-win-installer\radare2.iss /DRadare2Location=..\radare2\radare2-install\* /DLicenseLocation=..\COPYING.LESSER /DIcoLocation=radare2.ico /DMyAppVersion=%R2_VERSION%
    - uses: actions/upload-artifact@v2
      with:
        name: radare2_installer-${{ matrix.name }}.exe
        path: radare2win-installer\Output\radare2.exe
